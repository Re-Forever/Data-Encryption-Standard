#DES加密算法

#!/usr/bin/env python3.4
# coding=utf-8

IP = [[58,50,42,34,26,18,10, 2],
      [60,52,44,36,28,20,12, 4],
      [62,54,46,38,30,22,14, 6],
      [64,56,48,40,32,24,16, 8],
      [57,49,41,33,25,17, 9, 1],
      [59,51,43,35,27,19,11, 3],
      [61,53,45,37,29,21,13, 5],
      [63,55,47,39,31,23,15, 7]]
IP_1=[[40, 8,48,16,56,24,64,32],
      [39, 7,47,15,55,23,63,31],
      [38, 6,46,14,54,22,62,30],
      [37, 5,45,13,53,21,61,29],
      [36, 4,44,12,52,20,60,28],
      [35, 3,43,11,51,19,59,27],
      [34, 2,42,10,50,18,58,26],
      [33, 1,41, 9,49,17,57,25]]

#PC_1 = [[57,49,41,33,25,17, 9],
#        [ 1,58,50,42,34,26,18],
#        [10, 2,59,51,43,35,27],
#        [19,11, 3,60,52,44,36],
#        [63,55,47,39,31,23,15],
#        [ 7,62,54,46,38,30,22],
#        [14, 6,61,53,45,37,29],
#        [21,13, 5,28,20,12, 4]]
PC_1 = [ 57,49,41,33,25,17,9 ,
         1 ,58,50,42,34,26,18,
         10,2 ,59,51,43,35,27,
         19,11,3 ,60,52,44,36,
         63,55,47,39,31,23,15,
         7 ,62,54,46,38,30,22,
         14,6 ,61,53,45,37,29,
         21,13,5 ,28,20,12,4 ]
#pc_2 = [[14,17,11,24, 1, 5],
#        [ 3,28,15, 6,21,10],
#        [23,19,12, 4,26, 8],
#        [16, 7,27,20,13, 2],
#        [41,52,31,37,47,55],
#        [30,40,51,45,33,48],
#        [44,49,39,56,34,53],
#        [46,42,50,36,29,32]]
pc_2 = [14,17,11,24,1 ,5 ,
        3 ,28,15,6 ,21,10,
        23,19,12,4 ,26,8 ,
        16,7 ,27,20,13,2 ,
        41,52,31,37,47,55,
        30,40,51,45,33,48,
        44,49,39,56,34,53,
        46,42,50,36,29,32]
LS = [1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1]

L = []
R = []

#字符转二进制
def Words_To_Binary(s):
    num = []
    for i in range(len(s)):
        w = s[i]
        n = bin(ord(w)).replace("b",'')
        num.append(n)
    return num
#二进制转字符
def Binary_To_Words(nl):
    s = ""
    for num in nl:
        s += chr(int(num,2))
    return s


#IP置换
def IP_replacement(list):
    newlist = [[0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0]]
    #newlist = [0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0,
    #           0,0,0,0,0,0,0,0]
    data = []
    a = []
    for i in range(len(list)):
        #print(list[i])
        for j in range(len(list[i])):
            #print((int((IP[i][j]-1)/8),(IP[i][j])%8))
            newlist[i][j]= list[int((IP[i][j]-1)/8)][(IP[i][j]-1)%8]
    for i in range(len(newlist)):
        data.append("")
        for j in range(len(newlist[i])):
            data[i] += newlist[i][j]
    for i in data:
        for j in i:
            a.append(int(j))

    return a

#秘钥生成(这里生成C1，D1)
def generate_key(list):
    newlist = []
    data = []
    for i in list:
        for j in i:
            data.append(int(j))
    for i in PC_1:
        newlist.append(data[i-int(i/8)-1])
    return newlist




if __name__ == "__main__":
    Mlist = Words_To_Binary("computer")
    Klist = Words_To_Binary("program")
    print(IP_replacement(Mlist))
    print(generate_key(Klist))

